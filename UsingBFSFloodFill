/**

TC - O(m*n)
SC - O(1)


**/
class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        
        int rows = image.length;
        int cols = image[0].length;
        
        Queue<int[]> queue = new LinkedList<>();
        queue.add(new int[]{sr, sc});
        int oldColor = image[sr][sc];
        image[sr][sc] = newColor;
        
        int dirs[][] = {{1,0}, {0,1}, {-1,0}, {0,-1}};
        
        while(!queue.isEmpty())
        {
            int remove[] = queue.remove();
            
            for (int dir[] : dirs)
            {
                int ni = dir[0] + remove[0];
                int nj = dir[1] + remove[1];
                
                if (ni >=0 && ni<rows && nj>=0 && nj<cols && image[ni][nj] != newColor && image[ni][nj] == oldColor)
                {
                    image[ni][nj] = newColor;
                    queue.add(new int[]{ni, nj});
                }
            }
        }
        
        
        return image;
    }
}
